
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Графический редактор</title>
    <link rel="stylesheet" type="text/css" href="~/css/style.css" />
    <link rel="stylesheet" href="~/css/Menu.css">
    <link rel="stylesheet" href="~/css/ColorPanel.css">
    <link rel="stylesheet" href="~/css/ToolsPanel.css">
    <script defer type="text/javascript" src="~/js/script.js">
    </script>
</head>

<body onload="loadAnimation()" onunload="unloadAnimation()">
    @if(ViewData["CurError"] != null)
    {
        <h6 hidden id="cur_error">@ViewData["CurError"]</h6>
    }
    <div id="superLine">  </div>
    <header>
        <span id="darkLine"></span>
        <label id="directoryMenu">
            <input type="button" id="menubutton"><span></span>
            <div id="activemenu">
                <label id="newproject"></label>
                <label id="saveproject"><a download="" href=""></a></label>
                <label id="clearcanvas"><input type="button"></label>
                <div id="gallery"></div>
                <a id="to_gallery" href="Home/Gallery" hidden></a>
            </div>
        </label>
        <div class="directory1">

            <form class="colorButtons" action="" method="post" name="colorButtons" value="1">
                <label id="colorRed"><input type="radio" name="colorbuttons" value="red" onchange="changeColor(this)"><span></span></label>
                <label id="colorGreen"><input type="radio" name="colorbuttons" value="green" onchange="changeColor(this)"><span></span></label>
                <label id="colorYellow"><input type="radio" name="colorbuttons" value="yellow" onchange="changeColor(this)"><span></span></label>
                <label id="colorBlue"><input type="radio" name="colorbuttons" value="blue" onchange="changeColor(this)"><span></span></label>
                <label id="colorWhite"><input type="radio" name="colorbuttons" value="white" onchange="changeColor(this)"><span></span></label>
                <label id="colorBlack"><input type="radio" name="colorbuttons" value="black" onchange="changeColor(this)"><span></span></label>
                <label id="colorMagenta"><input type="radio" name="colorbuttons" value="magenta" onchange="changeColor(this)"><span></span></label>
                <label id="colorBrown"><input type="radio" name="colorbuttons" value="brown" onchange="changeColor(this)"><span></span></label>
                <label id="colorAlpha"><input type="radio" name="colorbuttons" value="rgba(0,0,0,0)" onchange="changeColor(this)"><span></span></label>
                <label id="colorCustom">
                    <input id="colorCustomInput" type="radio" checked name="colorbuttons" value="custom" onchange="changeColor(this)"><span></span><div id="underpallete"></div>
                    <input type="color" id="colortable">
                </label>

            </form>
        </div>


        <label id="marker"><input type="radio" checked name="toolbar" value="marker" onchange="changetool(this)"><span></span></label>

        <label id="line"><input type="radio" name="toolbar" value="line" onchange="changetool(this)"><span></span></label>

        <label id="pencil"><input type="radio" name="toolbar" value="pencil" onchange="changetool(this)"><span></span></label>

        <label id="rectangle">
            <input type="radio" name="toolbar" value="rectangle" onchange="changetool(this)"><span></span>
            <div id="helparea1"></div>
            <div id="extracolorpanel">

                <label id="excolorCustom">
                    <input id="exColorCustomInput"  type="radio" name="excolorbuttons" value="custom" onchange="changeExColor(this)">
                    <span></span><div id="exunderpallete"></div><input type="color" id="excolortable">
                </label>
                <label id="excolorAlpha"><input type="radio" checked name="excolorbuttons" value="rgba(0,0,0,0)" onchange="changeExColor(this)"><span></span></label>
                <label id="excolorRed"><input type="radio" name="excolorbuttons" value="red" onchange="changeExColor(this)"><span></span></label>
                <label id="excolorGreen"><input type="radio" name="excolorbuttons" value="green" onchange="changeExColor(this)"><span></span></label>
                <label id="excolorYellow"><input type="radio" name="excolorbuttons" value="yellow" onchange="changeExColor(this)"><span></span></label>
                <label id="excolorBlue"><input type="radio" name="excolorbuttons" value="blue" onchange="changeExColor(this)"><span></span></label>
                <label id="excolorWhite"><input type="radio" name="excolorbuttons" value="white" onchange="changeExColor(this)"><span></span></label>
                <label id="excolorBlack"><input type="radio" name="excolorbuttons" value="black" onchange="changeExColor(this)"><span></span></label>
                <label id="excolorMagenta"><input type="radio" name="excolorbuttons" value="magenta" onchange="changeExColor(this)"><span></span></label>
                <label id="excolorBrown"><input type="radio" name="excolorbuttons" value="brown" onchange="changeExColor(this)"><span></span></label>

            </div>
        </label>

        <label id="ellipse">
            <input type="radio" name="toolbar" value="ellipse" onchange="changetool(this)"><span></span>
            <div id="helparea2">
            </div>
        </label>


        <input type="range" title="Line weight 5 px" id="lineWeight" min="1" max="100" value="5">

        <label id="return_button"><input type="button"></label>
        <label id="zoom_plus"><input type="button"></label>
        <label id="zoom_minus"><input type="button"></label>

        <div id="auth">
            @if (ViewBag.IsAuth)
            {
                <input id="auth_check"  type="checkbox" checked>
            }
            else
            {
                <input id="auth_check" type="checkbox">
            }
        </div>

    </header>


    <div class="containerForCanvas">


        @if (ViewBag.IsCanvSaved == true)
        {<img style='display: none;' id="saved_canv" src="data:image/png;base64,@(Convert.ToBase64String(ViewBag.Img))" />

            @if (ViewBag.BgColor == "rgba(0, 0, 0, 0)")
            {
                <canvas id="mycanvas" width="10" height="10" style="background-image: url('images/bgAlpha.jpg');"> </canvas>
            }
            else
            {
            <canvas id="mycanvas" width="10" height="10" style="background-color: @ViewBag.BgColor">
            </canvas>
            }
        }

        else
        {
            <canvas id="mycanvas" width="800" height="600" style="background-color: @ViewBag.BgColor">
            </canvas>
        }


    </div>

    <footer>
        <span id="lowwerDarkLine"></span>
        <span id="cords"></span>
        <span id="curzoom">100%</span>
    </footer>

    <div id="modal_window">
        <div id="creating_window">
            <span>Выберете цвет фона</span>
            <label id="for_file">Выбор начального изображения (необязательно) <br><input type="file" id="for_file_input"></label>
            <label for="new_width" id="for_new_width">Ширина в px<input type="number" id="new_width" min="10" max="1600" placeholder="800"></label>
            <label for="new_height" id="for_new_height">Высота в px<input type="number" id="new_height" min="10" max="900" placeholder="600"></label>
            <label id="create_new" class="confirm-btn">Создать<input type="button"></label>
            <label id="create_cancel" class="cancel-btn">Отмена<input type="button"></label>
        </div>
        <div id="login_window">
            <div id="cancel1" class="cancel-btn">Отмена</div>
            @{await Html.RenderPartialAsync("~/Views/Account/Login.cshtml");}
        </div>
        <div id="logout_window">
            <div id="cancel2" class="cancel-btn">Отмена</div>
            <form asp-action="Logout" asp-controller="Account">
            <input type="submit" class="confirm-btn" value="Выйти из аккаута и перейти к редактору"/>
            </form>
        </div>
        <div id="register_window">
            <div id="cancel3" class="cancel-btn">Отмена</div>
            @{await Html.RenderPartialAsync("~/Views/Account/Register.cshtml");}
        </div>
        <div id="dowload_or_save_on_server">
            <form>
                <label>Скачать<input id="download_picture" type="checkbox" /></label>
                <label>Сохранить<input id="save_on_server" type="checkbox" /></label>
                <div id="ok_btn" class="confirm-btn">Ок</div>
            </form>
        </div>
    </div>

   
</body>

</html>